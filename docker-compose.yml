services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: turn-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    depends_on:
      - mysql
      - redis
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: turn-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: turn-redis
    restart: unless-stopped
    networks:
      - laravel

  nginx:
    image: nginx:alpine
    container_name: turn-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

volumes:
  db_data:

networks:
  laravel:
    driver: bridge
